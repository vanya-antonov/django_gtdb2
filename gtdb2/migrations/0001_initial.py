# Generated by Django 2.1.3 on 2018-12-20 16:20

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cof',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('descr', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('type', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'cofs',
            },
        ),
        migrations.CreateModel(
            name='CofParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('num', models.FloatField(blank=True, default=None, null=True)),
                ('data', models.TextField(blank=True, default=None, null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='param_set', to='gtdb2.Cof')),
            ],
            options={
                'db_table': 'cof_params',
            },
        ),
        migrations.CreateModel(
            name='Fshift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('descr', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('type', models.CharField(max_length=255)),
                ('coord', models.IntegerField()),
                ('len', models.IntegerField()),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('strand', models.IntegerField()),
                ('seed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'fshifts',
            },
        ),
        migrations.CreateModel(
            name='FshiftParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('num', models.FloatField(blank=True, default=None, null=True)),
                ('data', models.TextField(blank=True, default=None, null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='param_set', to='gtdb2.Fshift')),
            ],
            options={
                'db_table': 'fshift_params',
            },
        ),
        migrations.CreateModel(
            name='Org',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('descr', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('genus', models.CharField(max_length=255)),
                ('phylum', models.CharField(max_length=255)),
                ('kingdom', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'orgs',
            },
        ),
        migrations.CreateModel(
            name='OrgParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('num', models.FloatField(blank=True, default=None, null=True)),
                ('data', models.TextField(blank=True, default=None, null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='param_set', to='gtdb2.Org')),
            ],
            options={
                'db_table': 'org_params',
            },
        ),
        migrations.CreateModel(
            name='Seq',
            fields=[
                ('c_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('descr', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(max_length=255)),
                ('len', models.IntegerField()),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gtdb2.Org')),
            ],
            options={
                'db_table': 'seqs',
            },
        ),
        migrations.CreateModel(
            name='SeqParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('value', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('num', models.FloatField(blank=True, default=None, null=True)),
                ('data', models.TextField(blank=True, default=None, null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='param_set', to='gtdb2.Seq')),
            ],
            options={
                'db_table': 'seq_params',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_date', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('descr', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('password', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('email', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.AddField(
            model_name='seq',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gtdb2.User'),
        ),
        migrations.AddField(
            model_name='org',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gtdb2.User'),
        ),
        migrations.AddField(
            model_name='fshift',
            name='seq',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gtdb2.Seq'),
        ),
        migrations.AddField(
            model_name='fshift',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gtdb2.User'),
        ),
        migrations.AddField(
            model_name='cof',
            name='fshift_set',
            field=models.ManyToManyField(db_table='cof_fshifts', to='gtdb2.Fshift'),
        ),
        migrations.AddField(
            model_name='cof',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gtdb2.User'),
        ),
    ]
